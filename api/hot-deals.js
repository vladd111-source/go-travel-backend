let hotDealsCache = {};
let lastUpdate = 0;
const CACHE_TTL = 1000 * 60 * 15; // 15 –º–∏–Ω—É—Ç

const token = "067df6a5f1de28c8a898bc83744dfdcd";

export default async function handler(req, res) {
  // ‚úÖ –†–∞–∑—Ä–µ—à–∞–µ–º CORS
  res.setHeader("Access-Control-Allow-Origin", "https://go-travel-frontend.vercel.app");
  res.setHeader("Access-Control-Allow-Methods", "GET, OPTIONS");
  res.setHeader("Access-Control-Allow-Headers", "Content-Type");

  // üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ preflight-–∑–∞–ø—Ä–æ—Å–∞
  if (req.method === "OPTIONS") {
    return res.status(204).end();
  }

  const origin = (req.query.origin || "").toUpperCase().trim();
  const limit = parseInt(req.query.limit || "10", 10);
  const now = Date.now();

  console.log("üîß Origin –ø–æ–ª—É—á–µ–Ω:", origin);

  // üõë –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
  if (!origin || origin.length !== 3) {
    console.warn("üö´ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π origin:", origin);
    return res.status(400).json({ error: "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä origin (IATA-–∫–æ–¥)" });
  }

  const responseWrapper = (deals, title = `üî• –ì–æ—Ä—è—á–∏–µ —Ä–µ–π—Å—ã –∏–∑ ${origin}`) => {
    return res.status(200).json({ title, deals });
  };

  // üì¶ –ö—ç—à
  if (hotDealsCache[origin] && now - lastUpdate < CACHE_TTL) {
    console.log(`üì¶ –û—Ç–¥–∞—ë–º hot-deals –∏–∑ –∫—ç—à–∞ (${origin})`);
    return responseWrapper(hotDealsCache[origin].slice(0, limit));
  }

  const url = `https://api.travelpayouts.com/aviasales/v3/prices_for_dates?origin=${origin}&currency=usd&token=${token}`;

  try {
    console.log(`üåê –ó–∞–ø—Ä–æ—Å Aviasales –¥–ª—è ${origin}: ${url}`);
    const apiRes = await fetch(url);

    if (!apiRes.ok) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç API: ${apiRes.status} ${apiRes.statusText}`);
      return res.status(apiRes.status).json({ error: "–û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç Aviasales API" });
    }

    const data = await apiRes.json();

    if (!Array.isArray(data.data)) {
      console.error("‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:", data);
      return res.status(500).json({ error: "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç API" });
    }

    if (data.data.length === 0) {
      console.warn(`üì≠ –ù–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –¥–ª—è ${origin}`);
      return responseWrapper([], `üî• –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–π—Å–æ–≤ –∏–∑ ${origin}`);
    }

const filtered = data.data
  .filter(f => f.price && f.destination && f.departure_at)
  .sort((a, b) => a.price - b.price)
  .slice(0, limit)
  .map(f => {
    let duration = null;

    try {
      const dep = new Date(f.departure_at);
      const ret = f.return_at ? new Date(f.return_at) : null;

      if (!isNaN(dep.getTime()) && ret && !isNaN(ret.getTime())) {
        duration = Math.round((ret - dep) / 60000); // –≤ –º–∏–Ω—É—Ç–∞—Ö
      }
    } catch (err) {
      console.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ duration:", err);
    }

    return {
      ...f,
      highlight: true,
      duration,
    };
  });

    // üíæ –ö—ç—à
    hotDealsCache[origin] = filtered;
    lastUpdate = now;

    return responseWrapper(filtered);
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Aviasales:", err);
    return res.status(500).json({ error: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–æ—Ä—è—á–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π" });
  }
}
