const requestLog = {};
const iataCache = {};
const MIN_INTERVAL = 3000;      // –ó–∞—â–∏—Ç–∞ –æ—Ç —Ñ–ª—É–¥–∞ –ø–æ IP
const IATA_INTERVAL = 5000;     // –ó–∞—â–∏—Ç–∞ –æ—Ç —á–∞—Å—Ç—ã—Ö IATA-–∑–∞–ø—Ä–æ—Å–æ–≤

export default async function handler(req, res) {
  res.setHeader("Access-Control-Allow-Origin", "https://go-travel-frontend.vercel.app");
  res.setHeader("Access-Control-Allow-Methods", "GET, POST, OPTIONS");
  res.setHeader("Access-Control-Allow-Headers", "Content-Type");
  res.setHeader("Content-Type", "application/json");

  if (req.method === "OPTIONS") return res.status(200).end();

  const now = Date.now();
  const ip = req.headers["x-forwarded-for"]?.split(",")[0] || req.socket.remoteAddress || "unknown";

  if (!requestLog[ip]) requestLog[ip] = { lastRequest: 0, lastIataRequest: 0 };

  // üö´ –ß–∞—Å—Ç—ã–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
  if (now - requestLog[ip].lastRequest < MIN_INTERVAL) {
    return res.status(429).json({ error: "‚è≥ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ." });
  }
  requestLog[ip].lastRequest = now;

  const { from = "", to = "", date = "" } = req.query;
  if (!from || !to || !date) {
    return res.status(400).json({ error: "‚õî –ü–∞—Ä–∞–º–µ—Ç—Ä—ã from, to –∏ date –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã." });
  }

  const normalize = s => (s || "").trim().toLowerCase();
  const fallbackCodes = {
    "–ø–∞—Ä–∏–∂": "PAR",
    "–±–µ—Ä–ª–∏–Ω": "BER",
    "–º–æ—Å–∫–≤–∞": "MOW",
    "—Ä–∏–º": "ROM"
  };

  const delay = ms => new Promise(res => setTimeout(res, ms));

  // üîÑ IATA —Å –ø–æ–≤—Ç–æ—Ä–æ–º
  const getIataCode = async (city) => {
    const key = normalize(city);
    if (iataCache[key]) return iataCache[key];

    if (now - requestLog[ip].lastIataRequest < IATA_INTERVAL) {
      console.warn(`‚è≥ IATA-–∑–∞–ø—Ä–æ—Å –æ—Ç ${ip} –ø—Ä–æ–ø—É—â–µ–Ω ‚Äî —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ`);
      return fallbackCodes[key] || null;
    }

    requestLog[ip].lastIataRequest = now;
    const url = `https://autocomplete.travelpayouts.com/places2?term=${encodeURIComponent(city)}&locale=en&types[]=city`;

    for (let attempt = 0; attempt < 3; attempt++) {
      try {
        const res = await fetch(url);
        if (res.status === 429) {
          console.warn(`‚ö†Ô∏è 429 –ø—Ä–∏ IATA, –ø–æ–ø—ã—Ç–∫–∞ ${attempt + 1}`);
          await delay(1000 * (attempt + 1));
          continue;
        }

        const json = await res.json();
        const match = json.find(item => {
          const code = normalize(item.code);
          const name = normalize(item.name);
          const cityName = normalize(item.city_name);
          return code === key || name === key || cityName.includes(key);
        });

        const code = match?.code?.toUpperCase() || fallbackCodes[key] || null;
        if (code) iataCache[key] = code;
        return code;

      } catch (err) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è IATA:", err);
        await delay(500);
      }
    }

    console.warn("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å IATA, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º fallback");
    return fallbackCodes[key] || null;
  };

  const origin = from.length === 3 ? from.toUpperCase() : await getIataCode(from);
  const destination = to.length === 3 ? to.toUpperCase() : await getIataCode(to);

  if (!origin || !destination) {
    return res.status(400).json({ error: "‚õî –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å IATA-–∫–æ–¥—ã." });
  }

  console.log("üîç –ó–∞–ø—Ä–æ—Å:", { origin, destination, date, ip });

  const apiUrl = `https://api.travelpayouts.com/aviasales/v3/prices_for_dates?origin=${origin}&destination=${destination}&departure_at=${date}&currency=usd&token=067df6a5f1de28c8a898bc83744dfdcd`;

  try {
    const apiRes = await fetch(apiUrl);
    const result = await apiRes.json();

    if (Array.isArray(result?.data) && result.data.length > 0) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ä–µ–π—Å–æ–≤: ${result.data.length}`);
      return res.status(200).json(result.data);
    }

    console.warn("‚ö†Ô∏è –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç API. –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫–∏.");
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ API Aviasales:", err);
  }

  // üß™ Fallback
  return res.status(200).json([
    {
      origin,
      destination,
      departure_at: `${date}T08:30:00`,
      price: 55,
      airline: "W6"
    },
    {
      origin,
      destination,
      departure_at: `${date}T16:10:00`,
      price: 77,
      airline: "FR"
    }
  ]);
}
